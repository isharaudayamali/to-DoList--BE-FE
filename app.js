// LocalStorage To-Do App (Minified)
const K='tasks',get=()=>JSON.parse(localStorage.getItem(K)||'[]'),save=t=>localStorage.setItem(K,JSON.stringify(t)),create=(x,d)=>({id:Date.now()+'',text:x.trim(),completed:!1,createdAt:new Date().toISOString(),dueDate:d||null}),fmtDate=i=>{if(!i)return'';const d=new Date(i),n=Date.now(),m=Math.floor((n-d)/6e4);return m<1?'Just now':m<60?`${m}m ago`:m<1440?`${Math.floor(m/60)}h ago`:m<10080?`${Math.floor(m/1440)}d ago`:d.toLocaleDateString('en-US',{month:'short',day:'numeric'})},fmtDue=i=>{if(!i)return null;const d=new Date(i),n=new Date();n.setHours(0,0,0,0);d.setHours(0,0,0,0);const df=Math.floor((d-n)/864e5);return df<0?{text:'Overdue',cls:'danger'}:df===0?{text:'Today',cls:'warning'}:df===1?{text:'Tomorrow',cls:'info'}:df<7?{text:df+'d',cls:'success'}:{text:d.toLocaleDateString('en-US',{month:'short',day:'numeric'}),cls:'secondary'}},stats=()=>{const t=get(),d=t.filter(x=>x.completed).length,l=t.length,p=l?Math.round(d/l*100):0;document.getElementById('numbers').textContent=`${d}/${l}`;document.getElementById('progress').style.width=p+'%'},render=()=>{const t=get(),u=document.getElementById('taskItem');u.innerHTML=t.length?'':'<li class="list-group-item text-center text-muted">No tasks yet. Add one above! 🎯</li>';t.forEach(x=>{const l=document.createElement('li');l.className='list-group-item d-flex align-items-center gap-2';const due=x.dueDate?fmtDue(x.dueDate):null;l.innerHTML=`<input type="checkbox" class="form-check-input"${x.completed?' checked':''} onchange="tgl('${x.id}')"><div class="flex-grow-1${x.completed?' text-decoration-line-through text-muted':''}"><div>${x.text}</div><small class="text-muted">📅 ${fmtDate(x.createdAt)}${due?' • <span class="badge bg-'+due.cls+'">'+due.text+'</span>':''}</small></div><button class="btn btn-sm btn-outline-primary" onclick="edit('${x.id}')">✏️</button><button class="btn btn-sm btn-outline-danger" onclick="del('${x.id}')">🗑️</button>`;u.appendChild(l)});stats()};window.tgl=id=>{const t=get(),i=t.findIndex(x=>x.id===id);if(i>-1){t[i].completed=!t[i].completed;save(t);render()}};window.edit=id=>{const t=get(),i=t.findIndex(x=>x.id===id);if(i>-1){const n=prompt('Edit:',t[i].text);if(n&&n.trim()){t[i].text=n.trim();save(t);render()}}};window.del=id=>{if(confirm('Delete?')){save(get().filter(x=>x.id!==id));render()}};document.getElementById('taskForm').addEventListener('submit',e=>{e.preventDefault();const x=document.getElementById('taskInput').value,d=document.getElementById('dueDateInput').value;if(x.trim()){const t=get();t.push(create(x,d));save(t);document.getElementById('taskInput').value='';document.getElementById('dueDateInput').value='';render()}});render();
